let knowledge = 
[
    ["офсетная печать", "- это", "разновидность печати, предусматривающая перенос краски с печатной формы на запечатываемый материал не напрямую, а через промежуточный офсетный цилиндр"],
    ["цветная печать", "- это", "печать минимум в четыре цвета, в результате смешивания которых получается полноцветное изображение"],
    ["монохромная печать", "- это", "печать в два цвета (черный и белый) "],
    ["цифровая печать", "- это", "изготовление печатной продукции из электронных файлов с помощью цифрового оборудования"],
    ["компания Indigo Digital Press","выпустила","Indigo E-Print 1000"],
    ["Indigo E-Print 1000","- это","цифровая система офсетной цветной печати"],
    ["Indigo E-Print 1000","использует","метод офсетной цветной печати"],
    ["Indigo E-Print 1000","был выпущен","в 1993 году"],
    ["Indigo E-Print 1000","был выпущен","в Израиле"],
    ["индиго", "выпущен", "в 1993 году"],
    ["страна, в которой индиго","был выпущен,","стал Израиль"],
    ["индиго","использует","метод офсетной цветной печати"],
    ["компанию Indigo Digital Press", "основал", "Бенни Ланда <br><img class='question-img' src='../img/Benny_Landa.jpg'/>"],
    ["Imtec", "- это", "международная компания по микрографии"],
    ["микрография","- это","техника изготовления фоторепродукций с сильным уменьшением"],
    ["тонер", "представляет собой", "черный или цветной порошок, который с помощью электрографического принципа переносится на заряженный фотобарабан и формирует на нем изображение"],
    ["высокоскоростаня обработка изображения", "использует", "заряженные пигментированные частицы в жидком носителе"],
    ["двусторонняя (дуплексная) печать", "представляет собой", "способ печати, при котором печать производится на обеих сторонах бумаги в автоматическом режиме"],
    ["электронное сопоставление", "позволяет", "печатать всю публикацию с каждой страницей в правильной последовательности, благодаря возможности изменять изображение электронным способом"],
    ["жидкостная электрофотография (Electroink)", "- это", "технология печати, в которой используется высокоскоростной лазерный сканер, фотобарабан и заряженный жидкий тонер для создания изображения"],
    ["лазерная записывающая головка", "предназначена", "для записи скрытого электростатического изображения на заряженном электрофотографическом слое формного барабана"],
    ["формный цилиндр", "служит", "для последовательного воспроизведения электростатических, растрированных цветоделенных изображений"],
    ["скоротрон", "заряжает", "фотобарабан высоким потенциалом"],
    ["блок инжекторов", "впрыскивает", "чернила между фотобарабаном и проявочным цилиндром"],
    ["станция очистки", "удаляет", "остатки чернил с барабана"],
    ["проявочный цилиндр", "вращается", "в том же направлении, что и формный цилиндр с несколько большей скоростью, что позволяет убрать излишки тонера"],
    ["ракели", "собирают", "излишки тонера в лоток улавливателя тонера"],
    ["лоток улавливателя тонера", "предназначен", "для раздельного сбора тонера каждого из цветов"],
    ["сепаратор", "предназначен", "для раздельного сбора тонера каждого из цветов"],
    ["офсетный цилиндр","является","средой для промежуточного переноса изображения на бумагу"],
    ["монитор компьютера", "служит", "для отображение видеоинформации из компьютера"],
    ["печатный цилиндр", "захватывает", "листы бумаги и обеспечивает требуемое усилие прижима бумаги для переноса изображения"],
    ["устройство самонаклада", "обеспечивает", "подъем и подачу стопки бумагу к штырям захвата бумаги"],
    ["в выходной лоток для бумаги", "выходит", "изображение после печати"],
    ["симплексный метод печати", "является", "методом печати на одной стороне бумаги"],
    ["дуплексный лоток", "обеспечивает", "режим двусторонней печати"],
    ["баллоны с чернилами", "служат", "для подачи концентрированного тонера в ёмкости с чернилами"],
    ["ёмкости с чернилами", "служат", "для передачи чернил в инжекторы"],
    ["ёмкость для отходов","служит", "для сброса не пригодных для использования излишков тонера"],
    ["станция очистики", "удаляет", "остатки чернил с проявочного цилиндра"],
    ["компьютер", "управляет", "и синхронизирует работу всех узлов системмы"],
    ["принцип работы Indigo","заключается", "в формировании изображения путём наложения красок друг на друга и переноса итога наложения на бумагу"],
    ["начать работу с системой", "необходимо", "с выбора изображения для печати на мониторе компьютера"],
    ["4 вида цилиндров", "существует", "в системе: офсетный, формный, проявочный, печатный"],
    ["виды печати", "бывают", "офсетные, цифровые, цифровые офсетные, флексографические, сублимационные"],
    ["скорость печати системы", "равна", "приблизительно до 2000 цветных экземпляров в час"],
    ["в Indigo", "используются", "цвета CMYK - Cyan (Голубой), Magenta (Пурпурный), Yellow (Желтый), Key (Черный) <br><img class='question-img' src='../img/CMYK.gif'/>"],
    ["Just-In-Time","- это", "технология, позволяющая распечатать материал за 24 или 12 часов в зависимости от типа печати"],
    ["операционная система Indigo", "- это", "Indigo-OS"],
    ["операционная система у Индиго", "- это", "Indigo-OS"],
    ["растровое изображение" , "- это", "изображение, представляющее собой сетку пикселей — цветных точек на мониторе, бумаге и других отображающих устройствах"],
    ["векторное изображение", "- это", "изображение, формирующее с помощью математических примитивов (точки, линии, сплайны, кривые Безье)"],
    ["буклет", "представляет собой", "многокрасочное издание, отпечатанное на одном листе, сфальцованное любым способом в два и более сгиба"],
    ["самонаклад", "является", "механизмом для автоматизированной поштучной подачи бумаги из стопки и установки их в положение, удобное для транспортирование на последующие операции"],
    ["фальцовка", "является", "процессом складывания листов определенного объема и формата"],
    ["пазрешающая способность", "определяет", "число пикселей, ячеек или точек, приходящихся на единицу длины вводимой или выводимой строки"],
    ["высокая печать", "заключается", "в передаче изображения на запечатываемый материал с печатной формы, на которой печатающие элементы расположены выше пробельных"],
    ["глубокая печать","заключается", "в получении печатного оттиска с форм, на которых краска находится в углубленных печатающих элементах"],
    ["максимальный размер печати", "составляет", "12 дюймов на 46 дюймов"],
    ["максимальное разрешение печати", "составляет", "812 dpi"],
    ["DPI", "- это", "количество точек на дюйм"],
    ["цветопроба", "представялет собой", "изображение, служающее образцом для воспроизведения цвета при тиражировании печатного материала"],
    ["битовая карта (bitmap)", "является", "форматом для хранения растровых изображений"],
    ["фотобарабан", "представляет собой", "алюминиевый цилиндр, покрытый светочувствительным материалом, способным менять свой электирический потеницал при воздействии на него лазером или другим светом"],
    ["фоторепродукция", "- это", "фотографическое воспроизведение графических оригиналов"],
    ["пигмент", "представляет собой", "порошкообразные красящие вещества, придающие материалам непрозрачность, цвет и другие свойства"],
    ["электростатическое напряжение", "- это", "электрический заряд на предметах, составляющий в основном электроны, позволяющий притягивать и заставлять прилепать на себе другие предметы"],
    ["флексографская печать", "- это", "способ печати, который предсталяет собой прямую высокую ротационную печать быстровысыхающими жидкими красками, закрепляющимися на различных материалах"],
    ["пьезоэлектрик", "являются", "диэлектриками, которые под действиям электричества могу деформироваться или наоборот"],
]

let endings =
[
    ["ет","(ет|ут|ют)"], 
    ["ут","(ет|ут|ют)"], 
    ["ют","(ет|ут|ют)"],		     //1 спряжение

    ["ит","(ит|ат|ят)"], 
    ["ат","(ит|ат|ят)"], 
    ["ят","(ит|ат|ят)"],		     //2 спряжение

    ["ется","(ет|ут|ют)ся"], 
    ["утся","(ет|ут|ют|ующие)ся"], 
    ["ются","(ет|ут|ют)ся"], //1 спряжение, возвратные

    ["ится","(ит|ат|ят)ся"], 
    ["атся","(ит|ат|ят)ся"], 
    ["ятся","(ит|ат|ят)ся"],     //2 спряжение, возвратные

    ["ящие","ящие"],
    ["ee", "ee"],
    ["ен","ен"],
    ["ую","ая"],
    ["му","ма"],
    ["ена","ена"], 
    ["ено","ено"], 
    ["ены","ены"],		    //краткие прилагательные

    ["ан","ан"], 
    ["ая","ую"],
    ["ана","ана"], 
    ["ано","ано"], 
    ["аны","аны"],		    //краткие прилагательные

    ["жен","жен"], 
    ["жна","жна"], 
    ["жно","жно"], 
    ["жны","жны"],

    ["какой","какой"],
    ["какая","какая"],
    ["где","страна"],
    ["какова","какова"],
    ["такое", "является"],
    ["такое", "- это"],
    ["такой ", "- это"],
    ["как", "чтобы"],
    ["виды", "вида"],

    ["go", "go"],
    ["го", "го"],
    ["ов", ""],
    ["цилиндры", "цилиндр"],
    ["os", "os"],
    ["ос", "ос"],
]


let blacklist =
["замена", "замены", "атрибут", "маршрут", "член", "нет"]

function getEndingIndex(word)
{
    if(blacklist.indexOf(word) !== -1)
        return -1;
    
    for(let i = 0; i < endings.length; i++)
        if(word.substring(word.length - endings[i][0].length) == endings[i][0])
            return i;

    return -1;
}

function firstSymbolToLowerCase(str)
{
    return str.substring(0, 1).toLowerCase() + str.substring(1);
}

function firstSymbolToUpperCase(str)
{
    return str.substring(0, 1).toUpperCase() + str.substring(1);
}

function getAnswer(question)
{
    let text = firstSymbolToLowerCase(question);
    let separators = "'\",.!?()[]\\/";
    for(let i = 0; i < separators.length; i++)
        text = text.replace(separators[i], " " + separators[i]);

    let words = text.split(' ');

    for(let i = 0; i < words.length; i++)
        words[i] = firstSymbolToLowerCase(words[i]);

    let result = false;
    let answer = "";

    for(let i = 0; i < words.length; i++)
    {
        let ending = getEndingIndex(words[i]);

        if(ending >= 0)
        {
            words[i] = words[i].substring(0, words[i].length - endings[ending][0].length) + endings[ending][1]

            console.log(words)

            let predicate = new RegExp(".*" + words[i] + ".*");

            if(endings[ending][0] == endings[ending][1])
            {
                if(words[i] != "нужен")
                {
                    predicate = new RegExp(".*" + words[i] + " " + words[i + 1] + ".*");
                    i++;
                }
            }
            console.log(predicate)  

            let subjectReg = words.slice(i + 1).join(".*");
            console.log(subjectReg)

            if(subjectReg.length > 3)
            {
                let subject = new RegExp(".*" + subjectReg + ".*");
                console.log(subject)

                for(let j = 0; j < knowledge.length; j++)
                {
                    if(predicate.test(knowledge[j][1].toLowerCase()) && (subject.test(knowledge[j][0].toLowerCase()) || subject.test(knowledge[j][2].toLowerCase())))
                    {
                        answer += firstSymbolToUpperCase(knowledge[j][0] + " " + knowledge[j][1] + " " + knowledge[j][2] + ". ");
                        result = true;
                    }
                }

                if(!result)
                {
                    for(let j = 0; j < knowledge.length; j++)
                    {
                        if(subject.test(knowledge[j][0].toLowerCase() || subject.test(knowledge[j][2].toLowerCase())))
                        {
                            answer += firstSymbolToUpperCase(knowledge[j][0] + " " + knowledge[j][1] + " " + knowledge[j][2] + ". ");
                            result = true;
                        }
                    }
                }
            }
        }
    }

    if(!result)
        answer = "Ответ не найден. <br/>";

    return answer;
}
